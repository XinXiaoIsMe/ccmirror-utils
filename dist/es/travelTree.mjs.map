{"version":3,"file":"travelTree.mjs","sources":["../../src/travelTree.ts"],"sourcesContent":["interface TreeNode {\r\n    [key: string]: any;\r\n}\r\n\r\ntype TravelCallback<T> = (node: T) => void;\r\n\r\nfunction travel<T extends TreeNode> (tree: T[], cb: TravelCallback<T>, children = 'children') {\r\n    const set = new Set<T>();\r\n    const _travel = (tree: T[], cb: TravelCallback<T>, children: string) => {\r\n        tree.forEach(node => {\r\n            if (set.has(node)) return;\r\n            cb(node);\r\n            set.add(node);\r\n            Array.isArray(node[children]) && _travel(node[children], cb, children);\r\n        });\r\n    }\r\n\r\n    _travel(tree, cb, children);\r\n}\r\n\r\nexport default travel;\r\n"],"names":["tree","cb","children"],"mappings":"AAMA,SAAS,OAA4B,MAAW,IAAuB,WAAW,YAAY;AACpF,QAAA,0BAAU;AAChB,QAAM,UAAU,CAACA,OAAWC,KAAuBC,cAAqB;AACpEF,UAAK,QAAQ,CAAQ,SAAA;AACb,UAAA,IAAI,IAAI,IAAI;AAAG;AACnBC,UAAG,IAAI;AACP,UAAI,IAAI,IAAI;AACN,YAAA,QAAQ,KAAKC,SAAQ,CAAC,KAAK,QAAQ,KAAKA,SAAQ,GAAGD,KAAIC,SAAQ;AAAA,IAAA,CACxE;AAAA,EAAA;AAGG,UAAA,MAAM,IAAI,QAAQ;AAC9B;"}